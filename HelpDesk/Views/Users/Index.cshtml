@using PagedList.Mvc;
@model PagedList.IPagedList<HelpDesk.Models.User>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Users";
}

<h2>Users</h2>
<div style="overflow:  auto; margin-bottom: 10px;">
    @Html.ActionLink("Add New", "Create", "Users", null, new { @class = "btn btn-warning pull-left" })
    
    @using (Html.BeginForm("Index", "Users", FormMethod.Get))
    {
        @Html.Hidden("sortBy", (string)@ViewBag.sortBy)
        @Html.Hidden("descSort", (bool)@ViewBag.descSort)
        <input type="submit" value="Search" class="btn btn-warning pull-right" />
        <span class="pull-right">&nbsp;</span>
        @Html.TextBox("search", (string)ViewBag.search, new { @class = "form-control pull-right" })
    }
</div>
<table class="table">
    <tr>
        <th>
            @Html.SortableTableColumnHeader("First name", "FirstName", (string)ViewBag.sortBy, (bool)ViewBag.descSort, (string)ViewBag.search, (int)ViewBag.page)
        </th>
        <th>
            @Html.SortableTableColumnHeader("Last name", "LastName", (string)ViewBag.sortBy, (bool)ViewBag.descSort, (string)ViewBag.search, (int)ViewBag.page)
        </th>
        <th>
            @Html.SortableTableColumnHeader("Email", "Email", (string)ViewBag.sortBy, (bool)ViewBag.descSort, (string)ViewBag.search, (int)ViewBag.page)
        </th>
        <th>
            @Html.SortableTableColumnHeader("Phone", "Phone", (string)ViewBag.sortBy, (bool)ViewBag.descSort, (string)ViewBag.search, (int)ViewBag.page)
        </th>
        <th>
            @Html.SortableTableColumnHeader("Mobile phone", "MobilePhone", (string)ViewBag.sortBy, (bool)ViewBag.descSort, (string)ViewBag.search, (int)ViewBag.page)
        </th>
        <th>
            @Html.SortableTableColumnHeader("Company", "Company", (string)ViewBag.sortBy, (bool)ViewBag.descSort, (string)ViewBag.search, (int)ViewBag.page)
        </th>
        <th>
            @Html.SortableTableColumnHeader("Department", "Department", (string)ViewBag.sortBy, (bool)ViewBag.descSort, (string)ViewBag.search, (int)ViewBag.page)
        </th>
        <th>
            @Html.SortableTableColumnHeader("Role", "Role", (string)ViewBag.sortBy, (bool)ViewBag.descSort, (string)ViewBag.search, (int)ViewBag.page)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.MarkSearchedString(item.FirstName, (string)ViewBag.search)
        </td>
        <td>
            @Html.MarkSearchedString(item.LastName, (string)ViewBag.search)
        </td>
        <td>
            @Html.MarkSearchedString(item.Email, (string)ViewBag.search)
        </td>
        <td>
            @Html.MarkSearchedString(item.Phone, (string)ViewBag.search)
        </td>
        <td>
            @Html.MarkSearchedString(item.MobilePhone, (string)ViewBag.search)
        </td>
        <td>
            @Html.MarkSearchedString(item.Company, (string)ViewBag.search)
        </td>
        <td>
            @Html.MarkSearchedString(item.Department, (string)ViewBag.search)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Role)
        </td>
        <td>
            <a href='@Url.Action("Index", "Tickets")' class='btn btn-warning btn-sm'>Tickets <span class="badge">7</span></a>
            @Html.ActionLink("Edit", "Edit", "Users", new { id=item.UserId }, new { @class = "btn btn-warning btn-sm" })
            @Html.ActionLink("Delete", "Delete", "Users", new { id = item.UserId }, new { @class = "btn btn-warning btn-sm" })
        </td>
    </tr>
}

</table>


@Html.PagedListPager(Model, page => @Url.Action("Index", new { page = page, sortBy = (string)ViewBag.sortBy, descSort = (bool)ViewBag.descSort, search = (string)ViewBag.search }), PagedListRenderOptions.Classic)