@using PagedList.Mvc;
@using Microsoft.AspNet.Identity.Owin;
@using HelpDesk.DAL;
@using Microsoft.AspNet.Identity;

@model HelpDesk.Models.UsersIndexViewModel
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Users";
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        @(TempData["Success"])
    </div>
}

@if (TempData["Fail"] != null)
{
    <div class="alert alert-danger">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        @(TempData["Fail"])
    </div>
}

<header>
    <div class="container">
        <h1>List of users</h1>
        <hr />

        @using (Html.BeginForm("Index", "Users", FormMethod.Get, new { id = "filtering-form" }))
        {
            @Html.HiddenFor(model => model.Page)
            @Html.HiddenFor(model => model.SortBy)
            @Html.HiddenFor(model => model.DescSort)

            <div class="row">
                <div class="form-group col-sm-offset-3 col-sm-6 col-md-offset-4 col-md-4">
                    @Html.LabelFor(model => model.Search, new { @class = "control-label" })
                    <div class="input-with-button">
                        @Html.TextBoxFor(model => model.Search, new { @class = "form-control" })
                        <button id="search-btn" type="submit" class="btn btn-default btn-search">
                            <span class="glyphicon glyphicon-search"></span>
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</header>

<section class="container">
    @if (Model.Users.Count() == 0)
    {
        <h1>No users found...</h1>
    }
    else
    {
        <table class="table">
            <tr>
                <th>
                    @Html.SortableHeader("FirstName", "First name")
                </th>
                <th>
                    @Html.SortableHeader("LastName", "Last name")
                </th>
                <th>
                    @Html.SortableHeader("Email")
                </th>
                <th class="hidden-xs hidden-sm">
                    @Html.SortableHeader("Phone")
                </th>
                <th class="hidden-xs hidden-sm">
                    @Html.SortableHeader("MobilePhone", "Mobile phone")
                </th>
                <th class="hidden-xs hidden-sm">
                    @Html.SortableHeader("Company")
                </th>
                <th class="hidden-xs hidden-sm">
                    @Html.SortableHeader("Department")
                </th>
                <th>
                    @Html.SortableHeader("Role")
                </th>
                <th class="ticket-col">
                    @Html.SortableHeader("Tickets")
                </th>
            </tr>

            @foreach (var item in Model.Users)
            {
                <tr onclick='document.location.href="@Url.Action("Edit", new { id = item.Id })"'>
                    <td>
                        @Html.MarkSearchedString(item.FirstName, Model.Search)
                    </td>
                    <td>
                        @Html.MarkSearchedString(item.LastName, Model.Search)
                    </td>
                    <td>
                        @Html.MarkSearchedString(item.Email, Model.Search)
                    </td>
                    <td class="hidden-xs hidden-sm">
                        @Html.MarkSearchedString(item.Phone, Model.Search)
                    </td>
                    <td class="hidden-xs hidden-sm">
                        @Html.MarkSearchedString(item.MobilePhone, Model.Search)
                    </td>
                    <td class="hidden-xs hidden-sm">
                        @Html.MarkSearchedString(item.Company, Model.Search)
                    </td>
                    <td class="hidden-xs hidden-sm">
                        @Html.MarkSearchedString(item.Department, Model.Search)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => HttpContext.Current.GetOwinContext().GetUserManager<AppUserManager>().GetRoles(item.Id)[0])
                    </td>
                    <td class="ticket-col">
                        @item.RequestedTickets.Count
                    </td>
                </tr>
            }
        </table>

        @Html.PagedListPager(Model.Users, page => @Url.Action("Index", new
       {
           Page = page,
           sortBy = Model.SortBy,
           descSort = Model.DescSort,
           search = Model.Search
       }), PagedListRenderOptions.Classic)
    }    
</section>

<script>
    $(document).ready(function()
    {
        $("#search-btn").click(function() { $("#Page").val("1"); });
    });

    function sort(value)
    {
        if ($("#SortBy").val() == value)
        {
            $("#DescSort").val($("#DescSort").val().toLowerCase() == "true" ? "false" : "true");
        }
        else
        {
            $("#SortBy").val(value);
            $("#DescSort").val("false");
        }
        $("#filtering-form").submit();
    }
</script>