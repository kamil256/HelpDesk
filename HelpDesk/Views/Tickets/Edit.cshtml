@model HelpDesk.Models.TicketsEditViewModel

@{
    ViewBag.Title = "Edit";
}

<style>
    .full-width-container {
        background-color: #F5EECD; 
        padding: 30px 0;
        margin-bottom: 40px;
    }
    .full-width-container h1 {
        text-align: center; 
        margin: 0;
    }
    .full-width-container hr {
        border-color: #E3D179; 
        margin-top: 20px; 
        margin-bottom: 0; 
        border-top-left-radius: 200px 1px; 
        border-top-right-radius: 200px 1px;
    }
    .wide {
        width: 75%;
        max-width: 75%;
    }
</style>

<div class="full-width-container">
    <div class="container">
        <h1>Edit ticket</h1>
        <hr />
    </div>
</div>
<div class="container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.TicketID)

            <div class="form-group">
                <label class="control-label col-md-2">Created by</label>
                <div class="col-md-10">
                    <p class="form-control-static">
                        @if (Model.CreatedBy != null)
                        {
                            <a href='@Url.Action("Edit", "Users", new { id = Model.CreatedBy.UserID })'>@Model.CreatedBy.FirstName @Model.CreatedBy.LastName (@Model.CreatedBy.Email)</a>
                        }
                        else
                        {
                            <span>Deleted user</span>
                        }
                    </p>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Creation date</label>
                <div class="col-md-10">
                    <p class="form-control-static">@Model.CreatedOn</p>
                </div>
            </div>

            @Html.HiddenFor(model => model.RequestedByID)

            <div class="form-group">
                <label class="control-label col-md-2">Requestor</label>
                <div class="col-md-10">
                    @if (Model.RequestedBy != null)
                {
                        <input value="@Model.RequestedBy.FirstName @Model.RequestedBy.LastName (@Model.RequestedBy.Email)" id="requestorInp" class="form-control pull-left wide" disabled="disabled" />
                    }
                    else
                    {
                        <input value="-" id="requestorInp" class="form-control pull-left wide" disabled="disabled" />
                    }
                    <span class="pull-left">&nbsp;</span>
                    <button id="find-requestor-btn" class="btn btn-warning pull-left">Change</button>
                </div>
            </div>

            @Html.HiddenFor(model => model.AssignedToID)

            <div class="form-group">
                <label class="control-label col-md-2">Assigned to</label>
                <div class="col-md-10">
                    @if (Model.AssignedTo != null)
                {
                        <input value="@Model.AssignedTo.FirstName @Model.AssignedTo.LastName (@Model.AssignedTo.Email)" id="assignedToInp" class="form-control pull-left wide" disabled="disabled" />
                    }
                    else
                    {
                        <input value="-" id="assignedToInp" class="form-control pull-left wide" disabled="disabled" />
                    }
                    <span class="pull-left">&nbsp;</span>
                    <button id="find-assigned-to-btn" class="btn btn-warning pull-left">Change</button>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StatusID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.StatusID, new SelectList(new[] { "New", "In progress", "Solved", "Closed" }), new { @class = "form-control wide" })
                    @Html.ValidationMessageFor(model => model.StatusID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CategoryID", Model.Categories, new { @class = "form-control wide" })
                    @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control wide" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Content, 7, 10, new { @class = "form-control wide" })
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Solution, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Solution, 7, 10, new { @class = "form-control wide" })
                    @Html.ValidationMessageFor(model => model.Solution, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                    <button data-ticket-id="@Model.TicketID" data-ticket-title="@Model.Title" type="button" class="btn-delete btn btn-default">Delete</button>
                </div>
            </div>
        </div>
    }
</div>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>


    @Html.Partial("_FindRequestorPartial")
    @Html.Partial("_FindAssignedToPartial")
    @Html.Partial("_DeleteTicketPartial")
