@model HelpDesk.Models.TicketsEditViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Modify information for ticket</h2>

<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TicketID)
        
        @if ((Model.Status == "Solved" || Model.Status == "Closed") && Model.SolveOrCloseDate != null)
        {
            <div class="form-group">
                <label class="control-label col-md-2"></label>
                <div class="col-md-10">
                    <p class="form-control-static">
                        @switch (Model.Status)
                        {
                            case "Solved":
                                @: Solved by
                                break;
                            case "Closed":
                                @: Closed by
                                break;
                        }
                        @if (Model.Solver != null)
                        {
                            <a href='@Url.Action("Edit", "Users", new { id = Model.Solver.UserID })'>@Model.Solver.FirstName @Model.Solver.LastName (@Model.Solver.Email)</a>
                        }
                        else
                        {
                            <span>deleted user</span>
                        }
                        on @Model.SolveOrCloseDate
                    </p>
                </div>
            </div>
        }

        <div class="form-group">
            <label class="control-label col-md-2">Created by</label>
            <div class="col-md-10">
                <p class="form-control-static">
                    @if (Model.Creator != null)
                    {
                        <a href='@Url.Action("Edit", "Users", new { id = Model.Creator.UserID })'>@Model.Creator.FirstName @Model.Creator.LastName (@Model.Creator.Email)</a>
                    }
                    else
                    {
                        <span>Deleted user</span>
                    }
                </p>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Creation date</label>
            <div class="col-md-10">
                <p class="form-control-static">@Model.CreateDate</p>
            </div>
        </div>

        @Html.HiddenFor(model => model.RequestorID)

        <div class="form-group">
            <label class="control-label col-md-2">Requestor</label>
            <div class="col-md-10">
                @if (Model.Requestor != null)
                {
                    <input value="@Model.Requestor.FirstName @Model.Requestor.LastName (@Model.Requestor.Email)" id="requestorInp" class="form-control pull-left" disabled="disabled" />
                }
                else
                {
                    <input value="Deleted user" id="requestorInp" class="form-control pull-left" disabled="disabled" />
                }
                <span class="pull-left">&nbsp;</span>
                <button id="findRequestorBtn" class="btn btn-warning pull-left" onclick="event.preventDefault(); $('#findRequestorDialog').dialog('open');">Change</button>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Category", Model.Categories, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Status, new SelectList(new[] { "New", "Solved", "Closed" }), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Content, 10, 10, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Solution, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Solution, 10, 10, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Solution, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.12.4.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<div id="findRequestorDialog">
    @Html.Partial("_FindRequestor")
</div>

<script>
    //$("#findRequestor").click(function(e)
    //{

    //        e.preventDefault();
    //        $.post("/Tickets/FindUsers", { search: $("#searchedUser").val() }, function(data)
    //        {
    //            if (data.length == 0)
    //            {
    //                $("#requestorsList").html("<option value=''></option>");
    //            }
    //            else
    //            {
    //                $("#requestorsList").html("");
    //                for (var i = 0; i < data.length; i++)
    //                {
    //                    $("#requestorsList").append("<option value=" + data[i].Email + ">" + data[i].FirstName + " " + data[i].LastName + " (" + data[i].Email + ")</option>");
    //                }
    //            }
    //        }, "json");

    //    });
</script>