<script>
    function TicketsViewModel()
    {
        var self = this;

        self.tickets = ko.observableArray([]);
        self.currentTicket = ko.observable();
        self.currentUser = ko.observable();

        self.numberOfPages = ko.observable();
        self.pages = ko.computed(function()
        {
            var pages = [];
            for (var i = 1; i <= self.numberOfPages(); i++)
                pages.push(i);
            return pages;
        });

        self.statuses = ["All", "New", "In progress", "Solved", "Closed"];
        self.administrators = ko.observableArray([]);
        self.categories = ko.observableArray([]);
        self.sortingOptions = ko.observableArray(["Created on", "Requested by", "Title", "Category", "Status"]);

        self.filter =
        {
            status: ko.observable("All"),
            assignedTo: ko.observable(),
            category: ko.observable(),
            search: ko.observable(),
            advancedSearch: ko.observable(false),
            sortBy: ko.observable("Created on"),
            descSort: ko.observable(true),
            page: ko.observable(1)
        };

        self.getTickets = function()
        {
            $.ajax("/api/ApiTickets",
            {
                type: "GET",
                data:
                {
                    Status: self.filter.status(),
                    AssignedToID: self.filter.assignedTo() ? self.filter.assignedTo().UserId : null,
                    CategoryID: self.filter.category() ? self.filter.category().CategoryId : null,
                    Search: self.filter.search(),
                    AdvancedSearch: self.filter.advancedSearch(),
                    SortBy: self.filter.sortBy(),
                    DescSort: self.filter.descSort(),
                    Page: self.filter.page()
                },
                success: function(data)
                {
                    self.tickets(data.Tickets);
                    self.numberOfPages(data.NumberOfPages);
                }
            });
        };

        self.getAdministrators = function()
        {
            $.ajax("/api/ApiUsers",
            {
                type: "GET",
                data:
                {
                    Role: "Admin",
                    IgnorePaging: true
                },
                success: function(data)
                {
                    for (var i = 0; i < data.Users.length; i++)
                        data.Users[i].Name = data.Users[i].FirstName + " " + data.Users[i].LastName;
                    self.administrators(data.Users);
                }
            });
        };

        self.getCategories = function()
        {
            $.ajax("/api/ApiCategories",
            {
                type: "GET",
                success: function(data)
                {
                    self.categories(data);
                }
            });
        };

        self.assignUser = function()
        {
            $.ajax("/Tickets/AssignUserToTicket",
            {
                type: "POST",
                data:
                {
                    ticketId: self.currentTicket().TicketId,
                    userId: self.currentUser().UserId
                },
                success: function(data)
                {
                    self.getTickets();
                }
            });            
        };

        self.solution = ko.observable("");

        self.solveTicket = function()
        {
            $.ajax("/Tickets/SolveTicket",
            {
                type: "POST",
                data:
                {
                    ticketId: self.currentTicket().TicketId,
                    userId: self.currentUser().UserId,
                    solution: self.solution
                },
                success: function(data)
                {
                    self.getTickets();
                }
            });
        };

        self.closeTicket = function()
        {
            $.ajax("/Tickets/CloseTicket",
            {
                type: "POST",
                data:
                {
                    ticketId: self.currentTicket().TicketId
                },
                success: function(data)
                {
                    self.getTickets();
                }
            });            
        };

        self.sort = function(data, event)
        {
            var sortBy = event.target.textContent;
            if (self.filter.sortBy() === sortBy)
                self.filter.descSort(!self.filter.descSort());
            else
                self.filter.sortBy(sortBy);
            self.getTickets();
        };

        self.getSortSymbol = ko.computed(function()
        {
            if (self.filter.descSort())
                return "\u25BC";
            else
                return "\u25B2";
        });        

        self.getTickets();
        self.getAdministrators();
        self.getCategories();
    }

    function formatDate(ticks)
    {
        function padZero(value)
        {
            return value < 10 ? "0" + value : value;
        }

        var date = new Date(Number(ticks));
        var year = date.getFullYear();
        var month = padZero(date.getMonth() + 1);
        var day = padZero(date.getDate());
        var hours = padZero(date.getHours());
        var minutes = padZero(date.getMinutes());
        var seconds = padZero(date.getSeconds());
        return year + "-" + month  + "-" + day + " " + hours + ":" + minutes + ":" + seconds;
    }

    $(document).ready(function()
    {
        ko.applyBindings(new TicketsViewModel());
    });    
</script>

@{
    AppUserManager userManager = HttpContext.Current.GetOwinContext().GetUserManager<AppUserManager>();
    string currentUserId = User.Identity.GetUserId();
    bool isCurrentUserAdmin = false;
    if (User.Identity.IsAuthenticated && userManager.IsInRole(currentUserId, "Admin"))
    {
        isCurrentUserAdmin = true;
    }
}

@{
    ViewBag.Title = "Tickets";
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        @(TempData["Success"])
    </div>
}

@if (TempData["Fail"] != null)
{
    <div class="alert alert-danger">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        @(TempData["Fail"])
    </div>
}

<header>
    <div class="container">
        <h1>List of tickets</h1>
        <hr />

        <div class="row">
            @if (isCurrentUserAdmin)
            {
                <div class="form-group col-sm-6 col-md-3">
                    <label class="control-label">Status</label>
                    <select data-bind="options: statuses, value: filter.status, event: { change: function() { filter.page(1); getTickets(); } }" class="form-control"></select>
                </div>

                <div class="form-group col-sm-6 col-md-3">
                    <label class="control-label">Assigned to</label>
                    <select data-bind="options: administrators, value: filter.assignedTo, optionsCaption: 'All', optionsText: 'Name' , event: { change: function() { filter.page(1); getTickets(); } }" class="form-control"></select>
                </div>

                <div class="form-group col-sm-6 col-md-3">
                    <label class="control-label">Category</label>
                    <select data-bind="options: categories, value: filter.category, optionsCaption: 'All', optionsText: 'Name', event: { change: function() { filter.page(1); getTickets(); } }" class="form-control"></select>
                </div>
            }

            <div class='@(isCurrentUserAdmin ? "form-group col-sm-6 col-md-3" : "form-group col-sm-offset-3 col-sm-6 col-md-offset-4 col-md-4")'>
                <label class="control-label">Search</label>
                <div class="input-with-button">
                    <input data-bind="value: filter.search" class="form-control" />
                    <button data-bind="click: function() { filter.page(1); getTickets(); }" class="btn btn-default btn-search">
                        <span class="glyphicon glyphicon-search"></span>
                    </button>
                </div>
                <div class="checkbox">
                    <label class="control-label">
                        <input data-bind="value: filter.advancedSearch, event: { change: function() { filter.advancedSearch(!filter.advancedSearch()); } }" type="checkbox" />
                        Also search in content and solution
                    </label>
                </div>
            </div>
        </div>  
    </div>                                  
</header>

<section class="container">
    <h3 data-bind="visible: !tickets() || tickets().length === 0">No tickets found...</h3>

    <div data-bind="visible: tickets() && tickets().length != 0">
        <div class="form-inline pull-right" style="margin-bottom: 20px">
            <div class="form-group">
                <label class="control-label">Sort by</label>
                <select data-bind="options: sortingOptions, value: filter.sortBy, event: { change: function() { filter.page(1); getTickets(); } }" class="form-control"></select>
            </div>

            <div class="checkbox">
                <label>
                    <input data-bind="value: filter.descSort, event: { change: function() { filter.descSort(!filter.descSort()); console.log(filter.descSort()); getTickets(); } }" checked="checked" type="checkbox" />
                    Descending order
                </label>
            </div>
        </div>

        <style>
            

            .ticket-item:hover {
                background-color: #F5EECD !important;
                cursor: pointer;
                /*border-radius: 10px;*/
                /*outline: 1px solid #E3D179;*/
            }
            .ticket-item p {
                margin-bottom: 3px;
                transition: height 5s;
                -webkit-transition: height 5s;
            }
        </style>

        <div data-bind="foreach: tickets" style="margin-bottom: 20px;">
            <div class="ticket-item" data-bind="click: function() { document.location.href = '/Tickets/Edit/' + TicketId; }" style="box-shadow: gray 0 0 10px; display: table; clear: both; background-color: #F5F5F5; border-radius: 10px; width: 100%; margin-top: 10px;">
                <div  style="display: table-row;">
                    <div class="hidden-xs" style="display: table-cell; width: 150px; border-right: 1px dashed gray; vertical-align: middle; text-align: center;">
                        <p style="color: gray;">#<span data-bind="text: TicketId"></span></p>
                        <p style="font-weight: bold; font-size: 20px" data-bind="text: Status, css: { 'status-new': Status == 'New',
                                                                                                                   'status-in-progress': Status == 'In progress',
                                                                                                                   'status-solved': Status == 'Solved',
                                                                                                                   'status-closed': Status == 'Closed' }"></p>
                    </div>

                    <div style="padding: 10px; display: table-cell">
                        <b><p style="font-size: 22px;" data-bind="text: Title"></p></b>
                        <p>
                            Created on <b data-bind="text: formatDate(CreatedOn)"></b> by
                            <b>
                                <!-- ko if: (CreatedBy) -->
                                    <a href="#" data-bind="click: function(data, event) { event.stopPropagation(); document.location.href = '/Users/Edit/' + CreatedById; }, text: CreatedBy"></a>
                                <!-- /ko -->

                                <!-- ko if: (!CreatedBy) -->
                                    <span data-bind="visible: !CreatedBy">deleted user</span>
                                <!-- /ko -->
                            </b>
                            for
                            <b>
                                <!-- ko if: (RequestedBy) -->
                                    <a href="#" data-bind="click: function(data, event) { event.stopPropagation(); document.location.href = '/Users/Edit/' + RequestedById; }, text: RequestedBy"></a>
                                <!-- /ko -->
                                
                                <!-- ko if: (!RequestedBy) -->
                                    <span data-bind="visible: !RequestedBy">deleted user</span>
                                <!-- /ko -->
                            </b>
                        </p>
                        <p>Category: <b data-bind="text: Category ? Category : 'none'"></b></p>
                        <p class="visible-xs">Status: <b data-bind="text: Status, css: { 'status-new': Status == 'New',
                                                                           'status-in-progress': Status == 'In progress',
                                                                           'status-solved': Status == 'Solved',
                                                                           'status-closed': Status == 'Closed' }"></b></p>
                        <!-- ko if: (AssignedTo) -->
                            <p data-bind="visible: AssignedTo">Assigned to: <b><a href="#" data-bind="click: function(data, event) { event.stopPropagation(); document.location.href = '/Users/Edit/' + AssignedToId; }, text: AssignedTo"></a></b></p>
                        <!-- /ko -->
                    </div>

                    <div class="hidden-xs" style="width: 150px; display: table-cell; border-left: 1px dashed gray; vertical-align: middle">
                        <button data-bind="click: function(data, event) { $root.currentTicket(data); openAssignUserDialog(event); }" class="btn btn-sm btn-blue" style="width: 130px; margin: 10px 10px 2px;">Assign</button>
                        <button data-bind="click: function(data, event) { $root.currentTicket(data); openSolveTicketDialog(event); }" class="btn btn-sm btn-blue" style="width: 130px; margin: 2px 10px;">Solve</button>
                        <button data-bind="click: function(data, event) { $root.currentTicket(data); openCloseTicketDialog(event); }" class="btn btn-sm btn-blue" style="width: 130px; margin: 2px 10px 10px;">Close</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- ko if: pages().length >= 2 -->
            <ul data-bind="foreach: pages" class="pagination" style="margin: 0;">
                <li data-bind="css: { active: $data == $root.filter.page() }">
                    <a data-bind="text: $data, click: function() { $root.filter.page($data); $root.getTickets(); }" href="#"></a>
                </li>
            </ul>
        <!-- /ko -->
    </div>
</section>
@*if (isCurrentUserAdmin)
{
    @Html.Partial("_AssignUserPartial", Model.Admins)
    @Html.Partial("_SolveTicketPartial", Model.Admins)
    @Html.Partial("_CloseTicketPartial")
}*@

<script>
    function openAssignUserDialog(event)
    {
        event.stopPropagation();
        $("#assign-user-dialog").dialog(
        {
            autoOpen: false,
            modal: true,
            resizable: false
        }).dialog('open');
    }
</script>

<!-- ko if: currentTicket() -->
<div id="assign-user-dialog" class="dialog">
    <h4>Assign user to ticket <i data-bind="text: currentTicket().Title"></i></h4>

    <div class="form-group">
        <label class="control-label">User</label>
        <select data-bind="options: administrators, optionsText: 'Name', value: currentUser" class="form-control"></select>
    </div>

    <div class="button-group">
        <button data-bind="click: function() { assignUser(); $('#assign-user-dialog').dialog('close'); }" class="btn btn-blue">Ok</button>
        <button data-bind="click: function() { $('#assign-user-dialog').dialog('close'); }" class="btn btn-blue">Cancel</button>
    </div>
</div>
<!-- /ko -->

<script>
    function openSolveTicketDialog(event)
    {
        event.stopPropagation();
        $("#solve-ticket-dialog").dialog(
        {
            autoOpen: false,
            modal: true,
            resizable: false
        }).dialog('open');
    }
</script>

<!-- ko if: currentTicket() -->
<div id="solve-ticket-dialog" class="dialog">
    <h4>Solve ticket <i data-bind="text: currentTicket().Title"></i></h4>
    
    <div class="form-group">
        <label class="control-label">Solving user</label>
        <select data-bind="options: administrators, optionsText: 'Name', value: currentUser" class="form-control"></select>
    </div>

    <div class="form-group">
        <label class="control-label">Solution</label>
        <textarea data-bind="value: solution" cols="10" rows="7" class="form-control"></textarea>
    </div>

    <div class="button-group">
        <button data-bind="click: function() { solveTicket(); $('#solve-ticket-dialog').dialog('close'); }" class="btn btn-blue">Ok</button>
        <button data-bind="click: function() { $('#solve-ticket-dialog').dialog('close'); }" class="btn btn-blue">Cancel</button>
    </div>
</div>
<!-- /ko -->

<script>
    function openCloseTicketDialog(event)
    {
        event.stopPropagation();
        $("#close-ticket-dialog").dialog(
        {
            autoOpen: false,
            modal: true,
            resizable: false
        }).dialog('open');
    }
</script>

<!-- ko if: currentTicket() -->
<div id="close-ticket-dialog" class="dialog">
    <h4>Close ticket <i data-bind="text: currentTicket().Title"></i></h4>
    
    <div class="button-group">
        <button data-bind="click: function() { closeTicket(); $('#close-ticket-dialog').dialog('close'); }" class="btn btn-blue">Ok</button>
        <button data-bind="click: function() { $('#close-ticket-dialog').dialog('close'); }" class="btn btn-blue">Cancel</button>
    </div>
</div>
<!-- /ko -->