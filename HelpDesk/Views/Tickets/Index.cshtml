@using PagedList.Mvc;
@model HelpDesk.Models.TicketsIndexViewModel
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Tickets";
}

<style>
    header {
        background-color: #00ABEC; 
        color: white;
        padding: 30px 0;
        margin-bottom: 40px;
    }
    header > .container {
        text-align: center;
    }
    header h1 {
        color: white;
        text-align: center; 
        margin: 0;
    }
    header hr {
        border-color: #3F95C4; 
        margin: 20px 0 30px; 
        border-top-left-radius: 200px 1px; 
        border-top-right-radius: 200px 1px;
    }
    #filtering-form div {
        display: inline-block;
        vertical-align: top;
    }
    #filtering-form .form-group {
        vertical-align: top;
        text-align: left;
        width: 270px;
    }
    #filtering-form .form-group:last-child {
        position: relative;
    }
    #filtering-form .form-group:last-child > input {
        padding-right: 40px;
    }
    #filtering-form .form-group:last-child > button {
        position: absolute; 
        right: 0; 
        top: 25px; 
        border-top-left-radius: 0; 
        border-bottom-left-radius: 0;
    }
    #filtering-form .checkbox {
        margin: 0;
    }
    .table tr:hover:not(:first-child) {
        background-color: #F5EECD;
        cursor: pointer;
        outline: 1px solid #E3D179;
    }
    .table .title-header {
        width: 25%;
    }
    .table .buttons-header {
        width: 200px;
    }
    .table .btn {
        background-color: #428bca; 
        border-color: #428bca; 
        color: white;
        /* #89c402 #EA3819 */
    }
</style>

<header>
    <div class="container">
        <h1>List of tickets</h1>
        <hr />

        @using (Html.BeginForm("Index", "Tickets", FormMethod.Get, new { id = "filtering-form" }))
        {
            @Html.HiddenFor(model => model.SortBy)
            @Html.HiddenFor(model => model.DescSort)

            <div>
                <div class="form-group">
                    @Html.LabelFor(model => model.AssignedTo, new { @class = "control-label" })
                    @Html.DropDownListFor(
                            expression: model => model.AssignedTo,
                            selectList: new SelectList(Model.Admins.Select(u => new { UserID = u.UserID, Name = $"{u.FirstName} {u.LastName}" }), "UserID", "Name", Model.AssignedTo),
                            optionLabel: "All",
                            htmlAttributes: new { @class = "form-control" }
                        )
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Category, new { @class = "control-label" })
                    @Html.DropDownListFor(
                            expression: model => model.Category,
                            selectList: new SelectList(Model.Categories, "CategoryID", "Name", Model.Category),
                            optionLabel: "All",
                            htmlAttributes: new { @class = "form-control" }
                        )
                </div>
            </div>
            <div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Status, new { @class = "control-label" })
                    @Html.DropDownListFor(
                            expression: model => model.Status,
                            selectList: new SelectList(new[] { "All", "New", "In progress", "Solved", "Closed" }),
                            htmlAttributes: new { @class = "form-control" }
                        )
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Search, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Search, new { @class = "form-control" })
                    <button type="submit" class="btn btn-default">
                        <span class="glyphicon glyphicon-search"></span>
                    </button> 
                    <div class="checkbox">
                        <label class="control-label">
                            @Html.CheckBoxFor(model => model.AdvancedSearch)
                            Also search in content and solution
                        </label>
                    </div>                                 
                </div>
            </div>          
        }                        
     </div>                                    
</header>

<section class="container">
    <table class="table">
        <tr>
            <th>
                @Html.SortableHeader("CreatedOn", "Created on")
            </th>
            <th>
                @Html.SortableHeader("RequestedBy", "Requested by")
            </th>
            <th class="title-header">
                @Html.SortableHeader("Title")
            </th>
            <th>
                @Html.SortableHeader("Category")
            </th>
            <th>
                @Html.SortableHeader("Status")
            </th>
            <th>
                @Html.SortableHeader("AssignedTo", "Assigned to")
            </th>
            <th class="buttons-header">
            </th>
        </tr>

        @foreach(var item in Model.Tickets)
        {
            <tr onclick='document.location.href="@Url.Action("Edit", new { id = item.TicketID })"'>
                <td>
                    @item.CreateDate.ToString()
                </td>
                <td>
                    @(item.RequestedBy != null ? $"{item.RequestedBy.FirstName} {@item.RequestedBy.LastName}" : "-")
                </td>
                <td>
                    @Html.MarkSearchedString(item.Title, Model.Search)
                </td>
                <td>
                    @item.Category.Name
                </td>
                <td>
                    @item.Status
                </td>
                <td>
                    @(item.AssignedTo != null ? $"{item.AssignedTo.FirstName} {@item.AssignedTo.LastName}" : "-")
                </td>
                <td>
                    <button class="btn-assign btn btn-sm" data-ticket-id="@item.TicketID" data-ticket-title="@item.Title">Assign</button>
                    <button class="btn-solve btn btn-sm" data-ticket-id="@item.TicketID" data-ticket-title="@item.Title">Solve</button>
                    <button class="btn-close btn btn-sm" data-ticket-id="@item.TicketID" data-ticket-title="@item.Title">Close</button>
                </td>
            </tr>
        }
    </table>

    @Html.PagedListPager(Model.Tickets, page => @Url.Action("Index", new
    {
        Page = page,
        SortBy = Model.SortBy,
        DescSort = Model.DescSort,
        Search = Model.Search,
        Status = Model.Status,
        Category = Model.Category,
        AssignedTo = Model.AssignedTo,
        AdvancedSearch = Model.AdvancedSearch
    }), PagedListRenderOptions.Classic)

</section>

@Html.Partial("_AssignPersonPartial", Model.Admins)
@Html.Partial("_SolveTicketPartial", Model.Admins)
@Html.Partial("_CloseTicketPartial")


<script>
    $(document).ready(function()
    {
        $("#Status").change(function() { $("#filtering-form").submit(); });
        $("#AssignedTo").change(function() { $("#filtering-form").submit(); });
        $("#Category").change(function() { $("#filtering-form").submit(); });
    });

    function sort(value)
    {
        if ($("#SortBy").val() == value)
        {
            $("#DescSort").val($("#DescSort").val().toLowerCase() == "true" ? "false" : "true");
        }
        else
        {
            $("#SortBy").val(value);
            $("#DescSort").val("true");
        }
        $("#filtering-form").submit();
    }
</script>