@using PagedList.Mvc;
@model HelpDesk.Models.TicketsIndexViewModel
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Tickets";
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        @(TempData["Success"])
    </div>
}

@if (TempData["Fail"] != null)
{
    <div class="alert alert-danger">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        @(TempData["Fail"])
    </div>
}

<header>
    <div class="container">
        <h1>List of tickets</h1>
        <hr />

        @using (Html.BeginForm("Index", "Tickets", FormMethod.Get, new { id = "filtering-form" }))
        {
            @Html.HiddenFor(model => model.Page)
            @Html.HiddenFor(model => model.SortBy)
            @Html.HiddenFor(model => model.DescSort)

            <div class="row">
                <div class="form-group col-sm-6 col-md-3">
                    @Html.LabelFor(model => model.AssignedToID, new { @class = "control-label" })
                    @Html.DropDownListFor(
                            expression: model => model.AssignedToID,
                            selectList: new SelectList(Model.Admins.Select(u => new { UserID = u.UserID, Name = $"{u.FirstName} {u.LastName}" }), "UserID", "Name"),
                            optionLabel: "All",
                            htmlAttributes: new { @class = "form-control" }
                        )
                </div>
                <div class="form-group col-sm-6 col-md-3">
                    @Html.LabelFor(model => model.CategoryID, new { @class = "control-label" })
                    @Html.DropDownListFor(
                            expression: model => model.CategoryID,
                            selectList: new SelectList(Model.Categories, "CategoryID", "Name"),
                            optionLabel: "All",
                            htmlAttributes: new { @class = "form-control" }
                        )
                </div>
                <div class="form-group col-sm-6 col-md-3">
                    @Html.LabelFor(model => model.Status, new { @class = "control-label" })
                    @Html.DropDownListFor(
                            expression: model => model.Status,
                            selectList: new SelectList(new[] { "All", "New", "In progress", "Solved", "Closed" }),
                            htmlAttributes: new { @class = "form-control" }
                        )
                </div>
                <div class="form-group col-sm-6 col-md-3">
                    @Html.LabelFor(model => model.Search, new { @class = "control-label" })
                    <div class="input-with-button">
                        @Html.TextBoxFor(model => model.Search, new { @class = "form-control" })
                        <button id="search-btn" type="submit" class="btn btn-default btn-search">
                            <span class="glyphicon glyphicon-search"></span>
                        </button>
                    </div>
                    <div class="checkbox">
                        <label class="control-label">
                            @Html.CheckBoxFor(model => model.AdvancedSearch)
                            Also search in content and solution
                        </label>
                    </div>
                </div>
            </div>        
        }                        
     </div>                                    
</header>

<section class="container">
    @if (Model.Tickets.Count() == 0)
    {
        <h1>No tickets found...</h1>
    }
    else
    {
        <table class="table">
            <tr>
                <th>
                    @Html.SortableHeader("CreatedOn", "Created on")
                </th>
                <th class="hidden-xs hidden-sm">
                    @Html.SortableHeader("RequestedBy", "Requested by")
                </th>
                <th class="title-header">
                    @Html.SortableHeader("Title")
                </th>
                <th class="hidden-xs hidden-sm">
                    @Html.SortableHeader("Category")
                </th>
                <th>
                    @Html.SortableHeader("Status")
                </th>
                <th class="hidden-xs hidden-sm">
                    @Html.SortableHeader("AssignedTo", "Assigned to")
                </th>
                <th>
                </th>
            </tr>

            @foreach (var item in Model.Tickets)
            {
                <tr onclick='document.location.href="@Url.Action("Edit", new { id = item.TicketID })"'>
                    <td>
                        @item.CreatedOn.ToString()
                    </td>
                    <td class="hidden-xs hidden-sm">
                        @(item.RequestedBy != null ? $"{item.RequestedBy.FirstName} {item.RequestedBy.LastName}" : "-")
                    </td>
                    <td>
                        @Html.MarkSearchedString(item.Title, Model.Search)
                    </td>
                    <td class="hidden-xs hidden-sm">
                        @(item.Category != null ? item.Category.Name : "-")
                    </td>
                    <td>
                        <span class="status">@item.Status</span>
                    </td>
                    <td class="hidden-xs hidden-sm">
                        @(item.AssignedTo != null ? $"{item.AssignedTo.FirstName} {@item.AssignedTo.LastName}" : "-")
                    </td>
                    <td>
                        <button class="assign-user-btn btn btn-sm btn-blue" data-ticket-id="@item.TicketID" data-ticket-title="@item.Title">Assign</button>
                        <button class="solve-ticket-btn btn btn-sm btn-blue" data-ticket-id="@item.TicketID" data-ticket-title="@item.Title">Solve</button>
                        <button class="close-ticket-btn btn btn-sm btn-blue" data-ticket-id="@item.TicketID" data-ticket-title="@item.Title">Close</button>
                    </td>
                </tr>
            }
        </table>

        @Html.PagedListPager(Model.Tickets, page => @Url.Action("Index", new
        {
            Page = page,
            SortBy = Model.SortBy,
            DescSort = Model.DescSort,
            Search = Model.Search,
            Status = Model.Status,
            Category = Model.CategoryID,
            AssignedTo = Model.AssignedToID,
            AdvancedSearch = Model.AdvancedSearch
        }), PagedListRenderOptions.Classic)
    }
</section>

@Html.Partial("_AssignUserPartial", Model.Admins)
@Html.Partial("_SolveTicketPartial", Model.Admins)
@Html.Partial("_CloseTicketPartial")


<script>
    $(document).ready(function()
    {
        $("#Status").change(function() { $("#Page").val("1"); $("#filtering-form").submit(); });
        $("#AssignedToID").change(function() { $("#Page").val("1"); $("#filtering-form").submit(); });
        $("#CategoryID").change(function() { $("#Page").val("1"); $("#filtering-form").submit(); });
        $("#search-btn").click(function() { $("#Page").val("1"); });
        
        var statuses = document.getElementsByClassName("status");
        for (var i = 0; i < statuses.length; i++)
        {
            switch (statuses[i].innerHTML)
            {
                case "New":
                    statuses[i].className += " status-new";
                    break;
                case "In progress":
                    statuses[i].className += " status-in-progress";
                    break;
                case "Solved":
                    statuses[i].className += " status-solved";
                    break;
                case "Closed":
                    statuses[i].className += " status-closed";
                    break;
            }
        }
    });

    function sort(value)
    {
        if ($("#SortBy").val() == value)
        {
            $("#DescSort").val($("#DescSort").val().toLowerCase() == "true" ? "false" : "true");
        }
        else
        {
            $("#SortBy").val(value);
            $("#DescSort").val("true");
        }
        $("#filtering-form").submit();
    }
</script>