@model HelpDesk.UI.ViewModels.UsersEditViewModel

@{
    ViewBag.Title = "User details";
}

@{
    AppUserManager userManager = HttpContext.Current.GetOwinContext().GetUserManager<AppUserManager>();
    string currentUserId = User.Identity.GetUserId();
    bool isCurrentUserAdmin = false;
    if (User.Identity.IsAuthenticated && userManager.IsInRole(currentUserId, "Admin"))
    {
        isCurrentUserAdmin = true;
    }
}

<header style="margin: 0;">
    <div class="container">
        <h1>User details</h1>
    </div>
</header>



<section class="container" style="padding: 0;">
    <style>
        @@media (min-width: 768px) {
            .details-panel {
                background-color: #F5F5F5;
                box-shadow: gray 0 0 10px;
                border-radius: 5px;
                padding: 30px 0;
                
            }
        }
        @@media (max-width: 767px) {
            .details-panel {
                padding: 0 !important;
            }
        }        
    </style>

    <ul class="horizontal-menu">
        <li class="selected"><a href='@Url.Action("Edit", new { id = Model.UserID })'>Personal information</a></li>
        <li><a href='@Url.Action("ChangePassword", new { id = Model.UserID })'>Change password</a></li>
        <li><a href='@Url.Action("Tickets", new { id = Model.UserID })'>Tickets</a></li>
        <li><a href='@Url.Action("History", new { id = Model.UserID })'>History</a></li>
    </ul>
</section>
<section class="container">
   

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal details-panel col-md-offset-1 col-md-10 col-lg-offset-2 col-lg-8" style="padding: 15px 0; padding-top: 25px;">

                @*<div class="text-center">
                    <p style="display: inline-block; margin-bottom: 20px; padding: 0 40px 10px; border-bottom: 1px solid #999; border-bottom-left-radius: 100px 1px; border-bottom-right-radius: 100px 1px;">
                        <b>Edit personal information of @Model.FirstName @Model.LastName</b>
                    </p>
                </div>*@

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.Label("ID", new { @class = "control-label col-sm-3" })
                    <div class="col-sm-8">
                        <p class="form-control-static">
                            @Html.DisplayFor(model => model.UserID)
                            @Html.HiddenFor(model => model.UserID)
                        </p>
                        @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MobilePhone, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(model => model.MobilePhone, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MobilePhone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Company, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(model => model.Company, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Department, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(model => model.Department, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Role, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-8">
                        @{
                            var htmlAttributes = new Dictionary<string, object>();
                            htmlAttributes["class"] = "form-control";
                            if (!isCurrentUserAdmin)
                            {
                                htmlAttributes["disabled"] = "disabled";
                            }
                        }
                        @Html.DropDownListFor(model => model.Role, new SelectList(new[] { "User", "Admin" }), htmlAttributes)
                        @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-offset-3 col-sm-8">
                        <input type="submit" value="Save" class="btn btn-primary" />
                        @if (isCurrentUserAdmin)
                        {
                            <button data-user-id="@Model.UserID" data-user-name="@Model.FirstName @Model.LastName" type="button" value="Delete user" class="btn btn-danger delete-user-btn">Delete</button>
                        }
                    </div>
                </div>
            </div>
                            }
    </section>

@Html.Partial("_DeleteUserPartial")