@using HelpDesk.UI.Infrastructure;

@model HelpDesk.UI.ViewModels.Users.EditViewModel

@{
    ViewBag.Title = "Edit user";
    IdentityHelper identityHelper = new IdentityHelper();
}

<header>
    <h1>User details</h1>
</header>

<nav class="container horizontal-menu hidden-xs">
    @Html.ActionLink("Personal information", "Edit", new { id = Model.UserId }, new { @class = "selected" })
    @Html.ActionLink("Change password", "ChangePassword", new { id = Model.UserId })
    @Html.ActionLink("Tickets", "Tickets", new { id = Model.UserId })
    @Html.ActionLink("History", "History", new { id = Model.UserId })
</nav>

<nav class="container btn-group horizontal-menu-xs visible-xs">
    <a href="@Url.Action("Edit", new { id = Model.UserId })" class="btn btn-primary glyphicon glyphicon-pencil active"></a>
    <a href="@Url.Action("ChangePassword", new { id = Model.UserId })" class="btn btn-primary glyphicon glyphicon-lock"></a>
    <a href="@Url.Action("Tickets", new { id = Model.UserId })" class="btn btn-primary glyphicon glyphicon-list"></a>
    <a href="@Url.Action("History", new { id = Model.UserId })" class="btn btn-primary glyphicon glyphicon-time"></a>
</nav>

<main class="container">
    <div class="row">
        <div class="col-md-offset-1 col-md-10 col-lg-offset-2 col-lg-8">
            <div class="well">
                <p class="text-center text-gray">#@Model.UserId</p>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @using (Html.BeginForm("Edit", "Users", FormMethod.Post, new { @class = "form-horizontal" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.HiddenFor(model => model.UserId)

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastActivity, new { @class = "control-label col-sm-3" })
                        <div class="col-sm-8">
                            <p class="form-control-static">
                                @Html.DisplayFor(model => model.LastActivity)
                            </p>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-sm-3" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, new { @class = "control-label col-sm-3" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, new { @class = "control-label col-sm-3" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone, new { @class = "control-label col-sm-3" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MobilePhone, new { @class = "control-label col-sm-3" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(model => model.MobilePhone, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MobilePhone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Company, new { @class = "control-label col-sm-3" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(model => model.Company, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Department, new { @class = "control-label col-sm-3" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(model => model.Department, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    if (identityHelper.IsCurrentUserAnAdministrator())
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.Role, new { @class = "control-label col-sm-3" })
                            <div class="col-sm-8">
                                @Html.DropDownListFor(model => model.Role, new SelectList(new[] { "User", "Admin" }), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }

                    <div class="form-group">
                        <div class="col-sm-offset-3 col-sm-8">
                            <input type="submit" value="Save" class="btn btn-primary" />
                            @if (identityHelper.IsCurrentUserAnAdministrator())
                            {
                                <a href="#delete-user-dialog" class="btn btn-danger" data-toggle="modal">Delete</a>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</main>

@if (identityHelper.IsCurrentUserAnAdministrator())
{
    <div id="delete-user-dialog" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times</button>
                    <h4 class="modal-title">Confirmation</h4>
                </div>

                @using (Html.BeginForm("Delete", "Users", new { Model.UserId }))
                {
                    @Html.AntiForgeryToken()
                    
                    <div class="modal-body">
                        <p>Are you sure you want to delete user?</p>
                    </div>

                    <div class="modal-footer">
                        <input type="submit" value="Yes" class="btn btn-danger" /><input data-dismiss="modal" type="button" value="No" class="btn btn-default" />
                    </div>
                }
            </div>
        </div>
    </div>
}
