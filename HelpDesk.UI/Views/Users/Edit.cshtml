@using HelpDesk.UI.Infrastructure;

@model HelpDesk.UI.ViewModels.Users.EditViewModel

@{
    ViewBag.Title = "User details";
    IdentityHelper identityHelper = new IdentityHelper();
}
<script>
    $(document).ready(function()
    {
        ko.applyBindings();
    });
</script>

<header style="margin: 0;">
    <div class="container">
        <h1>User details</h1>
    </div>
</header>

<section class="container" style="padding: 0;">
    <style>
        @@media (min-width: 768px) {
            .details-panel {
                background-color: #F5F5F5;
                box-shadow: gray 0 0 10px;
                border-radius: 5px;
                padding: 30px 0;
                
            }
        }
        @@media (max-width: 767px) {
            .details-panel {
                padding: 0 !important;
            }
        }        
    </style>

    <ul class="horizontal-menu">
        <li class="selected"><a href='@Url.Action("Edit", new { id = Model.UserId })'>Personal information</a></li>
        <li><a href='@Url.Action("ChangePassword", new { id = Model.UserId })'>Change password</a></li>
        <li><a href='@Url.Action("Tickets", new { id = Model.UserId })'>Tickets</a></li>
        <li><a href='@Url.Action("History", new { id = Model.UserId })'>History</a></li>
    </ul>
</section>
<section class="container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal details-panel col-md-offset-1 col-md-10 col-lg-offset-2 col-lg-8" style="padding: 15px 0; padding-top: 25px;">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.Label("ID", new { @class = "control-label col-sm-3" })
                <div class="col-sm-8">
                    <p class="form-control-static">
                        @Html.DisplayFor(model => model.UserId)
                        @Html.HiddenFor(model => model.UserId)
                    </p>
                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastActivity, new { @class = "control-label col-sm-3" })
                <div class="col-sm-8">
                    <p class="form-control-static">
                        @Html.DisplayFor(model => model.LastActivity)
                    </p>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-sm-3" })
                <div class="col-sm-8">
                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, new { @class = "control-label col-sm-3" })
                <div class="col-sm-8">
                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, new { @class = "control-label col-sm-3" })
                <div class="col-sm-8">
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, new { @class = "control-label col-sm-3" })
                <div class="col-sm-8">
                    @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MobilePhone, new { @class = "control-label col-sm-3" })
                <div class="col-sm-8">
                    @Html.TextBoxFor(model => model.MobilePhone, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MobilePhone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Company, new { @class = "control-label col-sm-3" })
                <div class="col-sm-8">
                    @Html.TextBoxFor(model => model.Company, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Department, new { @class = "control-label col-sm-3" })
                <div class="col-sm-8">
                    @Html.TextBoxFor(model => model.Department, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                </div>
            </div>

            @if (identityHelper.IsCurrentUserAnAdministrator())
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.Role, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-8">
                        @Html.DropDownListFor(model => model.Role, new SelectList(new[] { "User", "Admin" }), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                    </div>
                </div>
            }

            <div class="form-group">
                <div class="col-sm-offset-3 col-sm-8">
                    <input type="submit" value="Save" class="btn btn-primary" />
                    @if (identityHelper.IsCurrentUserAnAdministrator())
                    {
                        @*<button data-bind="click: function(data, event) { $('#delete-user-dialog').modal('show');  }" type="button" class="btn btn-danger">Delete</button>*@
                        <a href="#delete-user-dialog" class="btn btn-danger" data-toggle="modal">Delete</a>
                    }
                </div>
            </div>
        </div>
    }
</section>

@if (identityHelper.IsCurrentUserAnAdministrator())
{
    <div id="delete-user-dialog" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times</button>
                    <h4 class="modal-title">Confirmation</h4>
                </div>

                @using (Html.BeginForm("Delete", "Users"))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.UserId)
                    <div class="modal-body">
                        <p>Are you sure you want to delete user?</p>
                    </div>

                    <div class="modal-footer">
                        <input type="submit" value="Yes" class="btn btn-danger" />
                        <input data-dismiss="modal" type="button" value="No" class="btn btn-primary" />
                    </div>
                }
            </div>
        </div>
    </div>
}
