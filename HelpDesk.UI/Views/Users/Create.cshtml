@model HelpDesk.UI.ViewModels.Users.CreateViewModel

@{
    ViewBag.Title = "New user";
}

<header>
    <h1>Add new user</h1>

    <script>
        $(document).load(function()
        {

        });
    </script>
</header>

<main class="container">    
    <div class="row">
        <div class="col-md-offset-1 col-md-10 col-lg-offset-2 col-lg-8">
            <div class="well">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @using (Html.BeginForm("Create", "Users", FormMethod.Post, new { @class = "form-horizontal", autocomplete = "off" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-sm-3" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, new { @class = "control-label col-sm-3" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, new { @class = "control-label col-sm-3" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>                    

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, new { @class = "control-label col-sm-3" })
                        <div class="col-sm-8">
                            <input type="text" class="fakeInputToDisableCredentialsAutocomplete" />
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmPassword, new { @class = "control-label col-sm-3" })
                        <div class="col-sm-8">
                            <input type="text" class="fakeInputToDisableCredentialsAutocomplete" />
                            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone, new { @class = "control-label col-sm-3" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MobilePhone, new { @class = "control-label col-sm-3" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(model => model.MobilePhone, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MobilePhone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Company, new { @class = "control-label col-sm-3" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(model => model.Company, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Department, new { @class = "control-label col-sm-3" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(model => model.Department, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Role, new { @class = "control-label col-sm-3" })
                        <div class="col-sm-8">
                            @Html.DropDownListFor(model => model.Role, new SelectList(new[] { "User", "Admin" }), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-offset-3 col-sm-8">
                            <input type="submit" value="Create" class="btn btn-primary" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</main>