@{
    ViewBag.Title = "List of users";
}

<script>
    function sendAjaxRequest(url, method, data, onSuccess)
    {
        $.ajax(url,
        {
            type: method,
            data: data,
            success: function(response)
            {
                if (response.Success)
                    displayNewSuccessMessage(response.Success);
                if (response.Fail)
                    displayNewFailMessage(response.Fail);
                onSuccess(response);
            },
            error: function()
            {
                displayNewFailMessage("Problem with connection. Try again, and if the problem persists contact your system administrator.");
            },
            beforeSend: showProgressIndicator,
            complete: hideProgressIndicator
        });
    }

    function UsersViewModel()
    {
        var self = this;

        self.users = ko.observableArray([]);
        self.sortingOptions = ko.observableArray(["First name", "Last name", "Email", "Phone", "Mobile phone", "Company", "Department", "Role", "Last activity", "Tickets"]);
        self.currentSearch = ko.observable();

        self.markSearch = function(text)
        {
            if (self.currentSearch() && self.currentSearch() != "")
                return text.replace(new RegExp("(" + self.currentSearch() + ")", 'gi'), "<mark>$1</mark>");
            else
                return text;
        };      

        self.filter =
        {
            search: ko.observable(),
            sortBy: ko.observable("Last name"),
            descSort: ko.observable(false),
            page: ko.observable(1)
        };

        self.numberOfPages = ko.observable();
        self.pages = ko.computed(function()
        {
            var pages = [];

            var leftBound = self.filter.page() - 2;
            var rightBound = self.filter.page() + 2;
            while (leftBound < 1)
            {
                leftBound++;
                rightBound++;
            }
            while (rightBound > self.numberOfPages())
            {
                rightBound--;
                if (leftBound > 1)
                    leftBound--;
            }

            for (var i = leftBound; i <= rightBound; i++)
                pages.push(i);
            return pages;
        });
        self.foundItemsCount = ko.observable();
        self.totalItemsCount = ko.observable();

        self.getUsers = function()
        {
            var data =
            {
                Search: self.filter.search(),
                SortBy: self.filter.sortBy(),
                DescSort: self.filter.descSort(),
                Page: self.filter.page()
            };
            var onSuccess = function(response)
            {
                self.users(response.Users);
                self.numberOfPages(response.NumberOfPages);
                self.foundItemsCount(response.NumberOfUsersFound);
                self.totalItemsCount(response.NumberOfUsers);
                self.currentSearch(self.filter.search());
            };
            sendAjaxRequest("/api/Users", "GET", data, onSuccess);
        };

        self.sort = function(data, event)
        {
            var sortBy = event.target.textContent;
            if (self.filter.sortBy() === sortBy)
                self.filter.descSort(!self.filter.descSort());
            else
                self.filter.sortBy(sortBy);
            self.getUsers();
        };

        self.getSortSymbol = ko.computed(function()
        {
            if (self.filter.descSort())
                return "\u25BC";
            else
                return "\u25B2";
        });

        self.getUsers();
    }

    $(document).ready(function()
    {
        ko.applyBindings(new UsersViewModel());
    });
</script>

<header>
    <h1>@ViewBag.Title</h1>

    <div class="container">
        <hr />
        <div class="row">
            <div class="form-group col-sm-offset-3 col-sm-6 col-md-offset-4 col-md-4">
                <label class="control-label">Search</label>
                <div class="input-with-button">
                    <input data-bind="textInput: filter.search, event: { blur: function() { if (filter.search()) filter.search(filter.search().trim()); if (filter.search() != currentSearch()) { filter.page(1); getUsers(); } }, keydown: function(data, event) { if (event.keyCode === 13 || event.which === 13) { $(event.target).next().focus(); } else return true; } }" class="form-control" />
                    <button class="btn btn-default glyphicon glyphicon-search" data-bind="event: { focus: function (data, event) { $(event.target).prev().focus(); } }"></button>
                </div>
            </div>
        </div>
    </div>
</header>

<main class="container">
    <h3 data-bind="visible: !users() || users().length === 0">No users found...</h3>
    
    <div data-bind="visible: users() && users().length != 0">
        <ul data-bind="visible: pages().length >= 2, foreach: pages" class="pagination pull-left">
            <!-- ko if: $data == $root.pages()[0] -->
            <li>
                <a data-bind="click: function() { $root.filter.page(1); $root.getUsers(); }" href="#">&laquo;</a>
            </li>
            <!-- /ko -->

            <li data-bind="css: { active: $data == $root.filter.page() }">
                <a data-bind="text: $data, click: function() { $root.filter.page($data); $root.getUsers(); }" href="#"></a>
            </li>

            <!-- ko if: $data == $root.pages()[$root.pages().length - 1] -->
            <li>
                <a data-bind="click: function() { $root.filter.page($root.numberOfPages()); $root.getUsers(); }" href="#">&raquo;</a>
            </li>
            <!-- /ko -->
        </ul>

        <div class="input-with-button sort-by form-inline pull-right">
            <label class="control-label">Sort by</label>
            <select data-bind="options: sortingOptions, value: filter.sortBy, event: { change: function() { filter.page(1); getUsers(); } }" class="form-control"></select>
            <button data-bind="click: function() { filter.descSort(!filter.descSort()); filter.page(1); getUsers(); }, css: { 'glyphicon-sort-by-attributes': !filter.descSort(), 'glyphicon-sort-by-attributes-alt': filter.descSort() }" class="btn btn-default glyphicon"></button>
        </div>

        <div class="users-list" data-bind="foreach: users">            
            <div class="well" data-bind="click: function() { document.location.href = '/Users/Edit/' + UserId; }">
                <p data-bind="html: $root.markSearch(FirstName + ' ' + LastName)"></p>
                <div class="row">
                    <div class="col-xs-6 col-sm-4">
                        <p><span class="text-gray">Email:</span> <span class="value" data-bind="html: $root.markSearch(Email)"></span></p>
                        <p><span class="text-gray">Phone:</span> <span class="value" data-bind="text: Phone"></span></p>
                        <p><span class="text-gray">Mobile phone:</span> <span class="value" data-bind="text: MobilePhone"></span></p>
                    </div>

                    <div class="col-xs-6 col-sm-4">
                        <p><span class="text-gray">Company:</span> <span class="value" data-bind="text: Company"></span></p>
                        <p><span class="text-gray">Department:</span> <span class="value" data-bind="text: Department"></span></p>
                        <p><span class="text-gray">Role:</span> <span class="value" data-bind="text: Role"></span></p>
                    </div>

                    <div class="hidden-xs col-sm-2">
                        <p class="text-gray">Last activity:</p>
                        <p data-bind="text: LastActivity"></p>
                    </div>

                    <div class="hidden-xs col-sm-2">
                        <p class="text-gray">Tickets:</p>
                        <p data-bind="text: TicketsCount"></p>
                    </div>
                </div>
            </div>
        </div>

        <ul data-bind="visible: pages().length >= 2, foreach: pages" class="pagination pull-left">
            <!-- ko if: $data == $root.pages()[0] -->
            <li>
                <a data-bind="click: function() { $root.filter.page(1); $root.getUsers(); }" href="#">&laquo;</a>
            </li>
            <!-- /ko -->

            <li data-bind="css: { active: $data == $root.filter.page() }">
                <a data-bind="text: $data, click: function() { $root.filter.page($data); $root.getUsers(); }" href="#"></a>
            </li>

            <!-- ko if: $data == $root.pages()[$root.pages().length - 1] -->
            <li>
                <a data-bind="click: function() { $root.filter.page($root.numberOfPages()); $root.getUsers(); }" href="#">&raquo;</a>
            </li>
            <!-- /ko -->
        </ul>

        <p class="pull-right" style="line-height: 34px; vertical-align: middle">Page <span data-bind="text: filter.page"></span> of <span data-bind="text: numberOfPages"></span> (<span data-bind="text: foundItemsCount"></span> item<span data-bind="visible: foundItemsCount() != 1">s</span> found of <span data-bind="text: totalItemsCount"></span> total)</p>
    </div>
</main>