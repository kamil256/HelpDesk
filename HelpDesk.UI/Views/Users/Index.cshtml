@{
    ViewBag.Title = "List of users";
}

<script>
    function UsersViewModel()
    {
        var self = this;

        self.users = ko.observableArray([]);
        self.sortingOptions = ko.observableArray(["First name", "Last name", "Email", "Phone", "Mobile phone", "Company", "Department", "Role", "Last activity", "Tickets"]);

        self.markSearch = function(text)
        {
            if (self.filter.search() && self.filter.search() != "")
                return text.replace(new RegExp("(" + self.filter.search() + ")", 'gi'), "<mark>$1</mark>");
            else
                return text;
        };

        self.numberOfPages = ko.observable();
        self.pages = ko.computed(function()
        {
            var pages = [];
            for (var i = 1; i <= self.numberOfPages(); i++)
                pages.push(i);
            return pages;
        });        

        self.filter =
        {
            search: ko.observable(),
            sortBy: ko.observable("Last name"),
            descSort: ko.observable(false),
            page: ko.observable(1)
        };

        self.getUsers = function()
        {
            $.ajax("/api/Users",
            {
                type: "GET",
                data:
                {
                    Search: self.filter.search(),
                    SortBy: self.filter.sortBy(),
                    DescSort: self.filter.descSort(),
                    Page: self.filter.page()
                },
                success: function(data)
                {
                    self.users(data.Users);
                    self.numberOfPages(data.NumberOfPages);
                },
                error: function()
                {
                    displayNewFailMessage("Problem with connection. Try again, and if the problem persists contact your system administrator.");
                }
            });
        };

        self.sort = function(data, event)
        {
            var sortBy = event.target.textContent;
            if (self.filter.sortBy() === sortBy)
                self.filter.descSort(!self.filter.descSort());
            else
                self.filter.sortBy(sortBy);
            self.getUsers();
        };

        self.getSortSymbol = ko.computed(function()
        {
            if (self.filter.descSort())
                return "\u25BC";
            else
                return "\u25B2";
        });

        self.getUsers();
    }

    $(document).ready(function()
    {
        ko.applyBindings(new UsersViewModel());
    });
</script>

<header>
    <h1>@ViewBag.Title</h1>

    <div class="container">
        <hr />
        <div class="row">
            <div class="form-group col-sm-offset-3 col-sm-6 col-md-offset-4 col-md-4">
                <label class="control-label">Search</label>
                <div class="input-with-button">
                    <input data-bind="value: filter.search" class="form-control" />
                    <button data-bind="click: function() { filter.page(1); getUsers(); }" class="btn btn-default btn-search glyphicon glyphicon-search"></button>
                </div>
            </div>
        </div>
    </div>
</header>

<main class="container">
    <h3 data-bind="visible: !users() || users().length === 0">No users found...</h3>
    
    <div data-bind="visible: users() && users().length != 0">
        <div class="sort-by form-inline pull-right">
            <div class="form-group">
                <label class="control-label">Sort by</label>
                <select data-bind="options: sortingOptions, value: filter.sortBy, event: { change: function() { filter.page(1); getUsers(); } }" class="form-control"></select>
            </div>

            <div class="checkbox">
                <label>
                    <input data-bind="value: filter.descSort, event: { change: function() { filter.descSort(!filter.descSort()); console.log(filter.descSort()); getUsers(); } }" type="checkbox" />
                    Descending order
                </label>
            </div>
        </div>

        <div class="users-list" data-bind="foreach: users">            
            <div class="panel panel-default" data-bind="click: function() { document.location.href = '/Users/Edit/' + UserId; }">
                <div class="panel-body">
                    <p data-bind="html: $root.markSearch(FirstName + ' ' + LastName)"></p>
                    <div class="row">
                        <div class="col-xs-6 col-sm-4">
                            <p><span class="category">Email:</span> <span class="value" data-bind="html: $root.markSearch(Email)"></span></p>
                            <p><span class="category">Phone:</span> <span class="value" data-bind="text: Phone"></span></p>
                            <p><span class="category">Mobile phone:</span> <span class="value" data-bind="text: MobilePhone"></span></p>
                        </div>

                        <div class="col-xs-6 col-sm-4">
                            <p><span class="category">Company:</span> <span class="value" data-bind="text: Company"></span></p>
                            <p><span class="category">Department:</span> <span class="value" data-bind="text: Department"></span></p>
                            <p><span class="category">Role:</span> <span class="value" data-bind="text: Role"></span></p>
                        </div>

                        <div class="hidden-xs col-sm-2">
                            <p class="category">Last activity:</p>
                            <p data-bind="text: LastActivity"></p>
                        </div>

                        <div class="hidden-xs col-sm-2">
                            <p class="category">Tickets:</p>
                            <p data-bind="text: TicketsCount"></p>
                        </div>
                    </div>
                </div>  
            </div>
        </div>

        <ul class="pagination" data-bind="visible: pages().length >= 2, foreach: pages">
            <li data-bind="css: { active: $data == $root.filter.page() }">
                <a href="#" data-bind="text: $data, click: function() { $root.filter.page($data); $root.getUsers(); }"></a>
            </li>
        </ul>
    </div>
</main>