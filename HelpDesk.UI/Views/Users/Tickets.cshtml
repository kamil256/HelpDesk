@model HelpDesk.UI.ViewModels.Users.TicketsViewModel

@{
    ViewBag.Title = "User's tickets";
    HelpDesk.UI.Infrastructure.IdentityHelper identityHelper = new HelpDesk.UI.Infrastructure.IdentityHelper();
}

<header>
    <h1>User details</h1>
</header>

<nav class="container horizontal-menu hidden-xs">
    @Html.ActionLink("Personal information", "Edit", new { id = Model.UserId })
    @Html.ActionLink("Change password", "ChangePassword", new { id = Model.UserId })
    @Html.ActionLink("Tickets", "Tickets", new { id = Model.UserId }, new { @class = "selected" })
    @Html.ActionLink("History", "History", new { id = Model.UserId })
</nav>

<nav class="container btn-group horizontal-menu-xs visible-xs">
    <a href="@Url.Action("Edit", new { id = Model.UserId })" class="btn btn-primary glyphicon glyphicon-pencil"></a>
    <a href="@Url.Action("ChangePassword", new { id = Model.UserId })" class="btn btn-primary glyphicon glyphicon-lock"></a>
    <a href="@Url.Action("Tickets", new { id = Model.UserId })" class="btn btn-primary glyphicon glyphicon-list active"></a>
    <a href="@Url.Action("History", new { id = Model.UserId })" class="btn btn-primary glyphicon glyphicon-time"></a>
</nav>

<main class="container">
    <h3 data-bind="visible: !tickets() || tickets().length === 0">No tickets found...</h3>

    <div data-bind="visible: tickets() && tickets().length > 0">
        <ul data-bind="visible: pages().length > 1, foreach: pages" class="pagination pull-left">
            <!-- ko if: $data == $root.pages()[0] -->
            <li>
                <a data-bind="click: function() { $root.changePageAndGetTickets(1); }" href="#">&laquo;</a>
            </li>
            <!-- /ko -->

            <li data-bind="css: { active: $data == $root.filters.pageNumber() }">
                <a data-bind="text: $data, click: function() { $root.changePageAndGetTickets($data) }" href="#"></a>
            </li>

            <!-- ko if: $data == $root.pages()[$root.pages().length - 1] -->
            <li>
                <a data-bind="click: function() { $root.changePageAndGetTickets($root.numberOfPages()) }" href="#">&raquo;</a>
            </li>
            <!-- /ko -->
        </ul>

        <div class="tickets-list" data-bind="foreach: tickets">
            <div class="well" data-bind="click: function() { $root.goToTicketDetails(TicketId); }">
                <div class="hidden-xs">
                    <p class="text-gray" data-bind="text: '#' + TicketId"></p>
                    <p data-bind="text: Status, css: { 'color-status-new': Status == 'New', 'color-status-in-progress': Status == 'In progress', 'color-status-solved': Status == 'Solved', 'color-status-closed': Status == 'Closed' }"></p>
                </div>

                <div>
                    <p data-bind="html: Title"></p>
                    <p><span class="text-gray">Date:</span> <span data-bind="text: CreateDate"></span></p>
                    <p>
                        <span class="text-gray">User:</span>
                        <span>
                            <a data-bind="visible: RequesterName, click: function(data, event) { event.stopPropagation(); $root.goToUserDetails(RequesterId); }, text: RequesterName"></a>
                            <span data-bind="visible: !RequesterName">-</span>
                        </span>
                    </p>
                    <p><span class="text-gray">Category:</span> <span data-bind="text: Category ? Category : '-'"></span></p>
                    <p class="visible-xs">
                        <span class="text-gray">Status:</span>
                        <span data-bind="text: Status, css: { 'color-status-new': Status == 'New', 'color-status-in-progress': Status == 'In progress', 'color-status-solved': Status == 'Solved', 'color-status-closed': Status == 'Closed' }"></span>
                    </p>
                </div>

                @if (identityHelper.IsCurrentUserAnAdministrator())
                {
                    <div class="hidden-xs">
                        <button title="Close ticket" data-bind="click: function(data, event) { event.stopPropagation(); $root.closeTicket($data); }" class="btn btn-sm btn-inverse pull-right"><span class="glyphicon glyphicon-remove"></span></button>
                        <button title="Solve ticket" data-bind="click: function(data, event) { event.stopPropagation(); $root.solveTicket($data); }" class="btn btn-sm btn-success pull-right"><span class="glyphicon glyphicon-ok"></span></button>
                        <button title="Assign administrator to ticket" data-bind="click: function(data, event) { event.stopPropagation(); $root.assignUser($data); }" class="btn btn-sm btn-primary pull-right">+<span class="glyphicon glyphicon-user"></span></button>
                    </div>
                }
            </div>
        </div>

        <ul data-bind="visible: pages().length > 1, foreach: pages" class="pagination pull-left">
            <!-- ko if: $data == $root.pages()[0] -->
            <li>
                <a data-bind="click: function() { $root.changePageAndGetTickets(1); }" href="#">&laquo;</a>
            </li>
            <!-- /ko -->

            <li data-bind="css: { active: $data == $root.filters.pageNumber() }">
                <a data-bind="text: $data, click: function() { $root.changePageAndGetTickets($data) }" href="#"></a>
            </li>

            <!-- ko if: $data == $root.pages()[$root.pages().length - 1] -->
            <li>
                <a data-bind="click: function() { $root.changePageAndGetTickets($root.numberOfPages()) }" href="#">&raquo;</a>
            </li>
            <!-- /ko -->
        </ul>

        <p class="pull-right result-info">Page <span data-bind="text: filters.pageNumber"></span> of <span data-bind="text: numberOfPages"></span> (<span data-bind="text: foundItemsCount"></span> item<span data-bind="visible: foundItemsCount() != 1">s</span> found of <span data-bind="text: totalItemsCount"></span> total)</p>
    </div>
</main>

@if (identityHelper.IsCurrentUserAnAdministrator())
{
    <!-- ko if: currentTicketId() -->
    <div id="assign-user-dialog" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times</button>
                    <h4 class="modal-title">Assign administrator to ticket</h4>
                </div>

                <div class="modal-body">
                    <div class="form-group">
                        <label class="control-label">Administrator</label>
                        <select data-bind="options: administrators, optionsText: 'Name', optionsValue: 'UserId', value: currentUserId" class="form-control"></select>
                    </div>
                </div>

                <div class="modal-footer">
                    <button data-bind="click: function() { assignUser(); }" data-dismiss="modal" class="btn btn-primary">Ok</button><button data-dismiss="modal" class="btn btn-default">Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <div id="solve-ticket-dialog" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times</button>
                    <h4 class="modal-title">Solve ticket</h4>
                </div>

                <div class="modal-body">
                    <div class="form-group">
                        <label class="control-label">Administrator</label>
                        <select data-bind="options: administrators, optionsText: 'Name', optionsValue: 'UserId', value: currentUserId" class="form-control"></select>
                    </div>

                    <div class="form-group">
                        <label class="control-label">Solution</label>
                        <textarea data-bind="value: solution" cols="10" rows="7" class="form-control"></textarea>
                    </div>
                </div>

                <div class="modal-footer">
                    <button data-dismiss="modal" data-bind="click: function() { solveTicket(); }" class="btn btn-primary">Ok</button><button data-dismiss="modal" class="btn btn-default">Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <div id="close-ticket-dialog" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times</button>
                    <h4 class="modal-title">Close ticket</h4>
                </div>

                <div class="modal-body">
                    Are you sure you want to close ticket?
                </div>

                <div class="modal-footer">
                    <button data-dismiss="modal" data-bind="click: function(data, event) { closeTicket(); }" class="btn btn-primary">Yes</button><button data-dismiss="modal" class="btn btn-default">No</button>
                </div>
            </div>
        </div>
    </div>
    <!-- /ko -->
}

<script>
    function TicketsListViewModel()
    {
        var self = this;

        self.tickets = ko.observableArray([]);

        self.administrators = ko.observableArray(@Html.Raw(Json.Encode(@Model.Administrators)));
        self.numberOfPages = ko.observable();
        self.foundItemsCount = ko.observable();
        self.totalItemsCount = ko.observable();
        self.currentTicketId = ko.observable();
        self.currentUserId = ko.observable('@identityHelper.CurrentUser.Id');
        self.solution = ko.observable('');

        self.filters =
        {
            pageNumber: ko.observable(1)
        };

        self.pages = ko.computed(function()
        {
            var pages = [];

            var leftBound = self.filters.pageNumber() - 2;
            var rightBound = self.filters.pageNumber() + 2;
            while (leftBound < 1)
            {
                leftBound++;
                rightBound++;
            }
            while (rightBound > self.numberOfPages())
            {
                rightBound--;
                if (leftBound > 1)
                    leftBound--;
            }
            for (var i = leftBound; i <= rightBound; i++)
                pages.push(i);

            return pages;
        });

        self.getTickets = function()
        {
            var data =
            {
                userId: '@Model.UserId',
                status: null,
                assignedToId: null,
                categoryId: null,
                search: null,
                advancedSearch: false,
                sortBy: 'Date',
                descSort: true,
                page: self.filters.pageNumber()
            };
            var onSuccess = function(response)
            {
                if (response.NumberOfPages != 0 && self.filters.pageNumber() > response.NumberOfPages)
                    self.changePageAndGetTickets(response.NumberOfPages);
                else
                {
                    self.tickets(response.Tickets);
                    self.numberOfPages(response.NumberOfPages);
                    self.foundItemsCount(response.FoundItemsCount);
                    self.totalItemsCount(response.TotalItemsCount);
                }
            };
            sendAjaxRequest("/api/Tickets", "GET", data, onSuccess);
        };

        self.changePageAndGetTickets = function(pageNumber)
        {
            self.filters.pageNumber(pageNumber);
            self.getTickets();
        };

        self.goToTicketDetails = function(id)
        {
            document.location.href = '/Tickets/Edit/' + id;
        };

        self.goToUserDetails = function(id)
        {
            document.location.href = '/Users/Edit/' + id;
        };

        self.assignUser = function(ticket)
        {
            if (!$('#assign-user-dialog').is(':visible'))
            {
                self.currentTicketId(ticket.TicketId);
                $('#assign-user-dialog').modal('show');
            }
            else
            {
                var data =
                {
                    ticketId: self.currentTicketId(),
                    userId: self.currentUserId()
                };
                var onSuccess = function()
                {
                    self.getTickets();
                }
                sendAjaxRequest("/Tickets/AssignUserToTicket", "POST", data, onSuccess);
            }
        };

        self.solveTicket = function(ticket)
        {
            if (!$('#solve-ticket-dialog').is(':visible'))
            {
                self.currentTicketId(ticket.TicketId);
                self.solution(ticket. Solution);
                $('#solve-ticket-dialog').modal('show');
            }
            else
            {
                var data =
                {
                    ticketId: self.currentTicketId(),
                    userId: self.currentUserId(),
                    solution: self.solution()
                };
                var onSuccess = function()
                {
                    self.getTickets();
                };
                sendAjaxRequest("/Tickets/SolveTicket", "POST", data, onSuccess);
            }
        };

        self.closeTicket = function(ticket)
        {
            if (!$('#close-ticket-dialog').is(':visible'))
            {
                self.currentTicketId(ticket.TicketId);
                $('#close-ticket-dialog').modal('show');
            }
            else
            {
                var data =
                {
                    ticketId: self.currentTicketId()
                };
                var onSuccess = function()
                {
                    self.getTickets();
                }
                sendAjaxRequest("/Tickets/CloseTicket", "POST", data, onSuccess);
            }
        };

        self.getTickets();
    }

    $(document).ready(function()
    {
        ko.applyBindings(new TicketsListViewModel(), document.getElementById('viewContent'));
    });
</script>