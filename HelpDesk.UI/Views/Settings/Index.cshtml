@using HelpDesk.UI.Infrastructure;

@model HelpDesk.UI.ViewModels.Settings.IndexViewModel

@{
    ViewBag.Title = "Settings";
    IdentityHelper identityHelper = new IdentityHelper();
}

<script>

var settingsViewModel = function()
{
    var self = this;

    self.usersPerPage = ko.observable(@Model.UsersPerPage);
    self.ticketsPerPage = ko.observable(@Model.TicketsPerPage);

    self.decrementUsersPerPage = function(data, event)
    {
        if (isNaN(self.usersPerPage()))
            self.usersPerPage(10);
        if (self.usersPerPage() > 1)
            self.usersPerPage(self.usersPerPage() - 1);
    }

    self.incrementUsersPerPage = function(data, event)
    {
        if (isNaN(self.usersPerPage()))
            self.usersPerPage(10);
        self.usersPerPage(self.usersPerPage() + 1);
    }

    self.decrementTicketsPerPage = function(data, event)
    {
        if (isNaN(self.ticketsPerPage()))
            self.ticketsPerPage(10);
        if (self.ticketsPerPage() > 1)
            self.ticketsPerPage(self.ticketsPerPage() - 1);
    }

    self.incrementTicketsPerPage = function(data, event)
    {
        if (isNaN(self.ticketsPerPage()))
            self.ticketsPerPage(10);
        self.ticketsPerPage(self.ticketsPerPage() + 1);
    }

    self.categories = ko.observableArray([]);

    @foreach (var category in Model.Categories)
    {
        @: self.categories.push({ categoryId: '@category.CategoryId', name: '@category.Name' });
    }

    self.newCategoryName = ko.observable('');

    self.addCategory = function()
    {
        self.categories.push({ categoryId: 0, name: self.newCategoryName() });
        self.newCategoryName('');
    }

    self.removeCategory = function(index)
    {
        self.categories.splice(index, 1);
    };
};

$(document).ready(function()
{
    ko.applyBindings(new settingsViewModel());
    $("#sortable").sortable({ cancel: "input,span.glyphicon-remove,span.glyphicon-plus" });
});

</script>

<header>
    <h1>@ViewBag.Title</h1>
</header>

<main class="container">
    <div class="row">
        <div class="col-md-offset-1 col-md-10 col-lg-offset-2 col-lg-8">
            <div class="panel panel-default">
                <div class="panel-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @using (@Html.BeginForm("Index", "Settings", FormMethod.Post, new { @class = "form-horizontal" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-group ">
                            <label class="control-label col-sm-3">Notifications</label>
                            <div class="col-sm-8">
                                <div class="checkbox">
                                    <label>
                                        @Html.CheckBoxFor(x => x.NewTicketsNotifications)
                                        Send email notifications about new tickets
                                    </label>
                                </div>
                                <div class="checkbox">
                                    <label>
                                        @Html.CheckBoxFor(x => x.SolvedTicketsNotifications)
                                        Send email notifications about solved tickets
                                    </label>
                                </div>
                            </div>
                        </div>

                        if (identityHelper.IsCurrentUserAnAdministrator())
                        {
                            <div class="form-group">
                                <label class="control-label col-sm-3">Users per page</label>
                                <div class="col-sm-8">
                                    <div class="numeric-input">
                                        <div class="pull-left">
                                            <span data-bind="click: decrementUsersPerPage" class="glyphicon glyphicon-chevron-left"></span>
                                        </div>
                                        <div class="pull-left">
                                            <input data-bind="value: usersPerPage" class="form-control" name="UsersPerPage" />
                                        </div>
                                        <div class="pull-left">
                                            <span data-bind="click: incrementUsersPerPage" class="glyphicon glyphicon-chevron-right"></span>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.UsersPerPage, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }

                        <div class="form-group">
                            <label class="control-label col-sm-3">Tickets per page</label>
                            <div class="col-sm-8">
                                <div class="numeric-input">
                                    <div class="pull-left">
                                        <span data-bind="click: decrementTicketsPerPage" class="glyphicon glyphicon-chevron-left"></span>
                                    </div>
                                    <div class="pull-left">
                                        <input data-bind="value: ticketsPerPage" class="form-control" name="TicketsPerPage" />
                                    </div>
                                    <div class="pull-left">
                                        <span data-bind="click: incrementTicketsPerPage" class="glyphicon glyphicon-chevron-right"></span>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.TicketsPerPage, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        if (identityHelper.IsCurrentUserAnAdministrator())
                        {
                            <div class="form-group">
                                <label class="control-label col-sm-3">Categories</label>
                                <div class="col-sm-8">
                                    <p>If you modify existing categories, then categories of tickets will also be modified. If you delete categories, then some tickets will not be assigned to any category.</p>
                                    <ul id="sortable-categories" data-bind="sortable: categories">
                                        <li>
                                            <div class="pull-left">
                                                <span class="glyphicon glyphicon-option-vertical"></span>
                                            </div>
                                            <div class="pull-left">
                                                <input data-bind='value: categoryId, attr: { name: "Categories[" + $index() + "].CategoryId" }' type="hidden" />
                                                <input data-bind='value: name, attr: { name: "Categories[" + $index() + "].Name" }' class="form-control" />
                                            </div>
                                            <div class="pull-left">
                                                <span class="glyphicon glyphicon-remove" data-bind="click: function() { $root.removeCategory($index()); }"></span>
                                            </div>                                            
                                        </li>
                                    </ul>
                                    
                                    <div id="new-category">
                                        <div class="pull-left">
                                            <input data-bind="value: newCategoryName" class="form-control" />
                                        </div>
                                        <div class="pull-left">
                                            <span data-bind="click: addCategory" class="glyphicon glyphicon-plus"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }

                        if (identityHelper.IsCurrentUserAnAdministrator())
                        {
                            <div class="form-group">
                                <label class="control-label col-sm-3">Tickets summary</label>
                                <div class="col-sm-8">
                                    <a href='@Url.Action("DownloadTicketsAsCSV", "Tickets")' class="btn btn-success">Download as CSV file</a>
                                </div>
                            </div>
                        }

                        <div class="form-group">
                            <div class="col-sm-offset-3 col-sm-8">
                                <input type="submit" value="Save" class="btn btn-primary" />
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</main>